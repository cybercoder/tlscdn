# Simple Allow rule
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: allow-login
  namespace: default
spec:
  ruleId: 1001
  phase: 1
  action: allow
  operator: "@contains"
  match: "login"
  variables:
    - type: REQUEST_URI
  transformations:
    - lowercase
  metadata:
    severity: "INFO"
    message: "Login request allowed"
    tags:
      - auth
      - allow
  enabled: true
---
# Deny Rule with Status Action
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: block-sqli
  namespace: default
spec:
  ruleId: 2001
  phase: 2
  action: status
  operator: "@detectSQLi"
  match: ""
  variables:
    - type: ARGS
  transformations:
    - urlDecode
    - lowercase
  actionConfig:
    status:
      code: 403
  metadata:
    severity: "CRITICAL"
    message: "SQL Injection detected"
    tags:
      - attack
      - sqli
  enabled: true
---
# Redirect Rule
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: redirect-old-path
  namespace: default
spec:
  ruleId: 3001
  phase: 1
  action: redirect
  operator: "@beginsWith"
  match: "/old-path"
  variables:
    - type: REQUEST_URI
  actionConfig:
    redirect:
      url: "/new-path"
  metadata:
    message: "Redirect old path to new path"
  enabled: true
---
# Chained Rule example
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: chain-example
  namespace: default
spec:
  ruleId: 4001
  phase: 2
  action: chain
  operator: "@contains"
  match: "user="
  variables:
    - type: ARGS
  transformations:
    - lowercase
  metadata:
    message: "Check suspicious user param"
  enabled: true
  chainRules:
    - ruleId: 4002
      phase: 2
      action: log
      operator: "@rx"
      match: "[0-9]{10}"
      variables:
        - type: ARGS
          selector: "user"
      transformations:
        - removeWhitespace
      metadata:
        message: "User param looks like a phone number"
---
# Ban North Korea (Geo-based rule)
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: ban-north-korea
  namespace: default
spec:
  ruleId: 5001
  phase: 1
  action: deny
  operator: "@geoLookup"
  match: "KP"
  variables:
    - type: GEO
  metadata:
    severity: "CRITICAL"
    message: "Block requests from North Korea"
    tags:
      - geo
      - block
  enabled: true
  actionConfig:
    status:
      code: 403
---
# Deny Example IP
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: deny-bad-ip
  namespace: default
spec:
  ruleId: 5002
  phase: 1
  action: deny
  operator: "@ipMatch"
  match: "192.168.10.100"
  variables:
    - type: REMOTE_ADDR
  metadata:
    severity: "HIGH"
    message: "Blocked malicious IP"
    tags:
      - ip
      - block
  enabled: true
  actionConfig:
    status:
      code: 403
---
# Deny Keywords in URI (SQLi/XSS style)
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: deny-suspicious-uri
  namespace: default
spec:
  ruleId: 5003
  phase: 2
  action: deny
  operator: "@contains"
  match: "select"
  variables:
    - type: REQUEST_URI
  transformations:
    - lowercase
  metadata:
    severity: "CRITICAL"
    message: "SQL keyword detected in URI"
    tags:
      - attack
      - sqli
  enabled: true
  actionConfig:
    status:
      code: 403
---
# Deny Multiple Suspicious Keywords (chained rule)
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: deny-multi-keyword
  namespace: default
spec:
  ruleId: 5004
  phase: 2
  action: chain
  operator: "@contains"
  match: "union"
  variables:
    - type: REQUEST_URI
  transformations:
    - lowercase
  metadata:
    severity: "CRITICAL"
    message: "Potential SQL injection detected"
    tags:
      - attack
      - sqli
  enabled: true
  chainRules:
    - ruleId: 5005
      phase: 2
      action: deny
      operator: "@contains"
      match: "select"
      variables:
        - type: REQUEST_URI
      transformations:
        - lowercase
      metadata:
        message: "Secondary check for SQL keyword 'select'"
---
# Block XSS in Parameters.
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: deny-xss-param
  namespace: default
spec:
  ruleId: 5006
  phase: 2
  action: deny
  operator: "@detectXSS"
  match: ""
  variables:
    - type: ARGS
  transformations:
    - urlDecode
    - lowercase
  metadata:
    severity: "CRITICAL"
    message: "XSS attempt detected in parameters"
    tags:
      - attack
      - xss
  enabled: true
  actionConfig:
    status:
      code: 403
---
# Block North Korea with specific IP and GET method.
apiVersion: cdn.ik8s.ir/v1alpha1
kind: WAFRule
metadata:
  name: deny-nk-ip-get
  namespace: default
spec:
  ruleId: 6001
  phase: 1
  action: chain
  operator: "@geoLookup"
  match: "KP"
  variables:
    - type: GEO
  metadata:
    severity: "CRITICAL"
    message: "Block North Korea with specific IP and GET method"
    tags:
      - geo
      - ip
      - method
  enabled: true
  actionConfig:
    status:
      code: 403
  chainRules:
    - ruleId: 6002
      phase: 1
      action: chain
      operator: "@ipMatch"
      match: "192.168.100.1"
      variables:
        - type: REMOTE_ADDR
      metadata:
        message: "Specific IP match"
    - ruleId: 6003
      phase: 1
      action: deny
      operator: "@streq"
      match: "GET"
      variables:
        - type: REQUEST_METHOD
      metadata:
        message: "Block GET method"
